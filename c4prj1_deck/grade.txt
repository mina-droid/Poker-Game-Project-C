Grading at Tue Sep 29 23:14:31 UTC 2020
Compiling deck.c -> deck.o
Compiling eval.c -> eval.o
Compiling cards.c -> cards.o
Linking eval.o, deck.o, cards.o, and our tester
Testing free_deck(deck_t *)
- Test passed
Testing add_card_to(deck_t *, card_t)
- Test passed
Testing add_empty_card(deck_t *)
- Test passed
Testing make_deck_exclude(deck_t *)
timeout: the monitored command dumped core
Valgrind reported errors:
==2167== Memcheck, a memory error detector
==2167== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==2167== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==2167== Command: ./tester mde
==2167== Parent PID: 2166
==2167== 
==2167== Use of uninitialised value of size 8
==2167==    at 0x402007: make_deck_exclude (in /graderhome/work/c4prj1_deck/tester)
==2167==    by 0x4039FC: check_make_deck_exclude (in /graderhome/work/c4prj1_deck/tester)
==2167==    by 0x400A78: main (in /graderhome/work/c4prj1_deck/tester)
==2167== 
==2167== Invalid write of size 8
==2167==    at 0x402007: make_deck_exclude (in /graderhome/work/c4prj1_deck/tester)
==2167==    by 0x4039FC: check_make_deck_exclude (in /graderhome/work/c4prj1_deck/tester)
==2167==    by 0x400A78: main (in /graderhome/work/c4prj1_deck/tester)
==2167==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==2167== 
==2167== 
==2167== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==2167==  Access not within mapped region at address 0x0
==2167==    at 0x402007: make_deck_exclude (in /graderhome/work/c4prj1_deck/tester)
==2167==    by 0x4039FC: check_make_deck_exclude (in /graderhome/work/c4prj1_deck/tester)
==2167==    by 0x400A78: main (in /graderhome/work/c4prj1_deck/tester)
==2167==  If you believe this happened as a result of a stack
==2167==  overflow in your program's main thread (unlikely but
==2167==  possible), you can try to increase the size of the
==2167==  main thread stack using the --main-stacksize= flag.
==2167==  The main thread stack size used in this run was 8388608.
==2167== 
==2167== HEAP SUMMARY:
==2167==     in use at exit: 1,296 bytes in 57 blocks
==2167==   total heap usage: 57 allocs, 0 frees, 1,296 bytes allocated
==2167== 
==2167== LEAK SUMMARY:
==2167==    definitely lost: 0 bytes in 0 blocks
==2167==    indirectly lost: 0 bytes in 0 blocks
==2167==      possibly lost: 0 bytes in 0 blocks
==2167==    still reachable: 1,296 bytes in 57 blocks
==2167==         suppressed: 0 bytes in 0 blocks
==2167== Rerun with --leak-check=full to see details of leaked memory
==2167== 
==2167== For counts of detected and suppressed errors, rerun with: -v
==2167== Use --track-origins=yes to see where uninitialised values come from
==2167== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
Testing build_remaining_deck(deck_t **, size_t)
Testing with 1 hand
timeout: the monitored command dumped core
Valgrind reported errors:
==2171== Memcheck, a memory error detector
==2171== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==2171== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==2171== Command: ./tester brd
==2171== Parent PID: 2170
==2171== 
==2171== Use of uninitialised value of size 8
==2171==    at 0x402007: make_deck_exclude (in /graderhome/work/c4prj1_deck/tester)
==2171==    by 0x402209: build_remaining_deck (in /graderhome/work/c4prj1_deck/tester)
==2171==    by 0x40365C: check_build_remaining_deck (in /graderhome/work/c4prj1_deck/tester)
==2171==    by 0x400A78: main (in /graderhome/work/c4prj1_deck/tester)
==2171== 
==2171== Invalid write of size 8
==2171==    at 0x402007: make_deck_exclude (in /graderhome/work/c4prj1_deck/tester)
==2171==    by 0x402209: build_remaining_deck (in /graderhome/work/c4prj1_deck/tester)
==2171==    by 0x40365C: check_build_remaining_deck (in /graderhome/work/c4prj1_deck/tester)
==2171==    by 0x400A78: main (in /graderhome/work/c4prj1_deck/tester)
==2171==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==2171== 
==2171== 
==2171== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==2171==  Access not within mapped region at address 0x0
==2171==    at 0x402007: make_deck_exclude (in /graderhome/work/c4prj1_deck/tester)
==2171==    by 0x402209: build_remaining_deck (in /graderhome/work/c4prj1_deck/tester)
==2171==    by 0x40365C: check_build_remaining_deck (in /graderhome/work/c4prj1_deck/tester)
==2171==    by 0x400A78: main (in /graderhome/work/c4prj1_deck/tester)
==2171==  If you believe this happened as a result of a stack
==2171==  overflow in your program's main thread (unlikely but
==2171==  possible), you can try to increase the size of the
==2171==  main thread stack using the --main-stacksize= flag.
==2171==  The main thread stack size used in this run was 8388608.
==2171== 
==2171== HEAP SUMMARY:
==2171==     in use at exit: 544 bytes in 13 blocks
==2171==   total heap usage: 15 allocs, 2 frees, 4,648 bytes allocated
==2171== 
==2171== LEAK SUMMARY:
==2171==    definitely lost: 0 bytes in 0 blocks
==2171==    indirectly lost: 0 bytes in 0 blocks
==2171==      possibly lost: 0 bytes in 0 blocks
==2171==    still reachable: 544 bytes in 13 blocks
==2171==         suppressed: 0 bytes in 0 blocks
==2171== Rerun with --leak-check=full to see details of leaked memory
==2171== 
==2171== For counts of detected and suppressed errors, rerun with: -v
==2171== Use --track-origins=yes to see where uninitialised values come from
==2171== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
Testing get_match_count(deck_t *)
timeout: the monitored command dumped core
Valgrind reported errors:
==2175== Memcheck, a memory error detector
==2175== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==2175== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==2175== Command: ./tester gmc
==2175== Parent PID: 2174
==2175== 
==2175== Invalid read of size 8
==2175==    at 0x4015AC: get_match_counts (in /graderhome/work/c4prj1_deck/tester)
==2175==    by 0x403269: check_get_match_count (in /graderhome/work/c4prj1_deck/tester)
==2175==    by 0x400A78: main (in /graderhome/work/c4prj1_deck/tester)
==2175==  Address 0x52040e8 is 0 bytes after a block of size 8 alloc'd
==2175==    at 0x4C2DB8F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==2175==    by 0x4C2FDEF: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==2175==    by 0x403116: check_get_match_count (in /graderhome/work/c4prj1_deck/tester)
==2175==    by 0x400A78: main (in /graderhome/work/c4prj1_deck/tester)
==2175== 
==2175== Invalid read of size 4
==2175==    at 0x4015AF: get_match_counts (in /graderhome/work/c4prj1_deck/tester)
==2175==    by 0x403269: check_get_match_count (in /graderhome/work/c4prj1_deck/tester)
==2175==    by 0x400A78: main (in /graderhome/work/c4prj1_deck/tester)
==2175==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==2175== 
==2175== 
==2175== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==2175==  Access not within mapped region at address 0x0
==2175==    at 0x4015AF: get_match_counts (in /graderhome/work/c4prj1_deck/tester)
==2175==    by 0x403269: check_get_match_count (in /graderhome/work/c4prj1_deck/tester)
==2175==    by 0x400A78: main (in /graderhome/work/c4prj1_deck/tester)
==2175==  If you believe this happened as a result of a stack
==2175==  overflow in your program's main thread (unlikely but
==2175==  possible), you can try to increase the size of the
==2175==  main thread stack using the --main-stacksize= flag.
==2175==  The main thread stack size used in this run was 8388608.
==2175== 
==2175== HEAP SUMMARY:
==2175==     in use at exit: 72 bytes in 8 blocks
==2175==   total heap usage: 8 allocs, 0 frees, 72 bytes allocated
==2175== 
==2175== LEAK SUMMARY:
==2175==    definitely lost: 4 bytes in 1 blocks
==2175==    indirectly lost: 0 bytes in 0 blocks
==2175==      possibly lost: 0 bytes in 0 blocks
==2175==    still reachable: 68 bytes in 7 blocks
==2175==         suppressed: 0 bytes in 0 blocks
==2175== Rerun with --leak-check=full to see details of leaked memory
==2175== 
==2175== For counts of detected and suppressed errors, rerun with: -v
==2175== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)

Overall Grade: F
