Grading at Tue Sep 29 22:43:10 UTC 2020
Compiling deck.c -> deck.o
Compiling eval.c -> eval.o
Compiling cards.c -> cards.o
Linking eval.o, deck.o, cards.o, and our tester
Testing free_deck(deck_t *)
- Test passed
Testing add_card_to(deck_t *, card_t)
timeout: the monitored command dumped core
Valgrind reported errors:
==1510== Memcheck, a memory error detector
==1510== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==1510== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==1510== Command: ./tester act
==1510== Parent PID: 1509
==1510== 
==1510== Invalid read of size 8
==1510==    at 0x401EC2: add_card_to (in /graderhome/work/c4prj1_deck/tester)
==1510==    by 0x4042F2: check_add_card_to (in /graderhome/work/c4prj1_deck/tester)
==1510==    by 0x400A78: main (in /graderhome/work/c4prj1_deck/tester)
==1510==  Address 0x52053a0 is 0 bytes after a block of size 0 alloc'd
==1510==    at 0x4C2DB8F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==1510==    by 0x4C2FDEF: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==1510==    by 0x401EA1: add_card_to (in /graderhome/work/c4prj1_deck/tester)
==1510==    by 0x4042F2: check_add_card_to (in /graderhome/work/c4prj1_deck/tester)
==1510==    by 0x400A78: main (in /graderhome/work/c4prj1_deck/tester)
==1510== 
==1510== Invalid write of size 4
==1510==    at 0x401EC8: add_card_to (in /graderhome/work/c4prj1_deck/tester)
==1510==    by 0x4042F2: check_add_card_to (in /graderhome/work/c4prj1_deck/tester)
==1510==    by 0x400A78: main (in /graderhome/work/c4prj1_deck/tester)
==1510==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==1510== 
==1510== 
==1510== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==1510==  Access not within mapped region at address 0x0
==1510==    at 0x401EC8: add_card_to (in /graderhome/work/c4prj1_deck/tester)
==1510==    by 0x4042F2: check_add_card_to (in /graderhome/work/c4prj1_deck/tester)
==1510==    by 0x400A78: main (in /graderhome/work/c4prj1_deck/tester)
==1510==  If you believe this happened as a result of a stack
==1510==  overflow in your program's main thread (unlikely but
==1510==  possible), you can try to increase the size of the
==1510==  main thread stack using the --main-stacksize= flag.
==1510==  The main thread stack size used in this run was 8388608.
==1510== 
==1510== HEAP SUMMARY:
==1510==     in use at exit: 896 bytes in 58 blocks
==1510==   total heap usage: 58 allocs, 0 frees, 896 bytes allocated
==1510== 
==1510== LEAK SUMMARY:
==1510==    definitely lost: 0 bytes in 0 blocks
==1510==    indirectly lost: 0 bytes in 0 blocks
==1510==      possibly lost: 0 bytes in 0 blocks
==1510==    still reachable: 896 bytes in 58 blocks
==1510==         suppressed: 0 bytes in 0 blocks
==1510== Rerun with --leak-check=full to see details of leaked memory
==1510== 
==1510== For counts of detected and suppressed errors, rerun with: -v
==1510== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
Testing add_empty_card(deck_t *)
timeout: the monitored command dumped core
Valgrind reported errors:
==1514== Memcheck, a memory error detector
==1514== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==1514== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==1514== Command: ./tester aec
==1514== Parent PID: 1513
==1514== 
==1514== Invalid read of size 8
==1514==    at 0x401F18: add_empty_card (in /graderhome/work/c4prj1_deck/tester)
==1514==    by 0x403D1E: check_add_empty_card (in /graderhome/work/c4prj1_deck/tester)
==1514==    by 0x400A78: main (in /graderhome/work/c4prj1_deck/tester)
==1514==  Address 0x520b668 is 0 bytes after a block of size 24 alloc'd
==1514==    at 0x4C2FD5F: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==1514==    by 0x403EBC: check_add_empty_card (in /graderhome/work/c4prj1_deck/tester)
==1514==    by 0x400A78: main (in /graderhome/work/c4prj1_deck/tester)
==1514== 
==1514== Invalid write of size 4
==1514==    at 0x401F1E: add_empty_card (in /graderhome/work/c4prj1_deck/tester)
==1514==    by 0x403D1E: check_add_empty_card (in /graderhome/work/c4prj1_deck/tester)
==1514==    by 0x400A78: main (in /graderhome/work/c4prj1_deck/tester)
==1514==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==1514== 
==1514== 
==1514== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==1514==  Access not within mapped region at address 0x0
==1514==    at 0x401F1E: add_empty_card (in /graderhome/work/c4prj1_deck/tester)
==1514==    by 0x403D1E: check_add_empty_card (in /graderhome/work/c4prj1_deck/tester)
==1514==    by 0x400A78: main (in /graderhome/work/c4prj1_deck/tester)
==1514==  If you believe this happened as a result of a stack
==1514==  overflow in your program's main thread (unlikely but
==1514==  possible), you can try to increase the size of the
==1514==  main thread stack using the --main-stacksize= flag.
==1514==  The main thread stack size used in this run was 8388608.
==1514== 
==1514== HEAP SUMMARY:
==1514==     in use at exit: 6,928 bytes in 447 blocks
==1514==   total heap usage: 454 allocs, 7 frees, 7,016 bytes allocated
==1514== 
==1514== LEAK SUMMARY:
==1514==    definitely lost: 0 bytes in 0 blocks
==1514==    indirectly lost: 0 bytes in 0 blocks
==1514==      possibly lost: 0 bytes in 0 blocks
==1514==    still reachable: 6,928 bytes in 447 blocks
==1514==         suppressed: 0 bytes in 0 blocks
==1514== Rerun with --leak-check=full to see details of leaked memory
==1514== 
==1514== For counts of detected and suppressed errors, rerun with: -v
==1514== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
Testing make_deck_exclude(deck_t *)
timeout: the monitored command dumped core
Valgrind reported errors:
==1518== Memcheck, a memory error detector
==1518== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==1518== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==1518== Command: ./tester mde
==1518== Parent PID: 1517
==1518== 
==1518== Use of uninitialised value of size 8
==1518==    at 0x401FCE: make_deck_exclude (in /graderhome/work/c4prj1_deck/tester)
==1518==    by 0x4039DC: check_make_deck_exclude (in /graderhome/work/c4prj1_deck/tester)
==1518==    by 0x400A78: main (in /graderhome/work/c4prj1_deck/tester)
==1518== 
==1518== Invalid write of size 8
==1518==    at 0x401FCE: make_deck_exclude (in /graderhome/work/c4prj1_deck/tester)
==1518==    by 0x4039DC: check_make_deck_exclude (in /graderhome/work/c4prj1_deck/tester)
==1518==    by 0x400A78: main (in /graderhome/work/c4prj1_deck/tester)
==1518==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==1518== 
==1518== 
==1518== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==1518==  Access not within mapped region at address 0x0
==1518==    at 0x401FCE: make_deck_exclude (in /graderhome/work/c4prj1_deck/tester)
==1518==    by 0x4039DC: check_make_deck_exclude (in /graderhome/work/c4prj1_deck/tester)
==1518==    by 0x400A78: main (in /graderhome/work/c4prj1_deck/tester)
==1518==  If you believe this happened as a result of a stack
==1518==  overflow in your program's main thread (unlikely but
==1518==  possible), you can try to increase the size of the
==1518==  main thread stack using the --main-stacksize= flag.
==1518==  The main thread stack size used in this run was 8388608.
==1518== 
==1518== HEAP SUMMARY:
==1518==     in use at exit: 1,296 bytes in 57 blocks
==1518==   total heap usage: 57 allocs, 0 frees, 1,296 bytes allocated
==1518== 
==1518== LEAK SUMMARY:
==1518==    definitely lost: 0 bytes in 0 blocks
==1518==    indirectly lost: 0 bytes in 0 blocks
==1518==      possibly lost: 0 bytes in 0 blocks
==1518==    still reachable: 1,296 bytes in 57 blocks
==1518==         suppressed: 0 bytes in 0 blocks
==1518== Rerun with --leak-check=full to see details of leaked memory
==1518== 
==1518== For counts of detected and suppressed errors, rerun with: -v
==1518== Use --track-origins=yes to see where uninitialised values come from
==1518== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
Testing build_remaining_deck(deck_t **, size_t)
Testing with 1 hand
timeout: the monitored command dumped core
Valgrind reported errors:
==1522== Memcheck, a memory error detector
==1522== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==1522== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==1522== Command: ./tester brd
==1522== Parent PID: 1521
==1522== 
==1522== Invalid read of size 8
==1522==    at 0x401EC2: add_card_to (in /graderhome/work/c4prj1_deck/tester)
==1522==    by 0x4021A2: build_remaining_deck (in /graderhome/work/c4prj1_deck/tester)
==1522==    by 0x40363C: check_build_remaining_deck (in /graderhome/work/c4prj1_deck/tester)
==1522==    by 0x400A78: main (in /graderhome/work/c4prj1_deck/tester)
==1522==  Address 0x52053a8 is 0 bytes after a block of size 8 alloc'd
==1522==    at 0x4C2FD5F: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==1522==    by 0x401EA1: add_card_to (in /graderhome/work/c4prj1_deck/tester)
==1522==    by 0x4021A2: build_remaining_deck (in /graderhome/work/c4prj1_deck/tester)
==1522==    by 0x40363C: check_build_remaining_deck (in /graderhome/work/c4prj1_deck/tester)
==1522==    by 0x400A78: main (in /graderhome/work/c4prj1_deck/tester)
==1522== 
==1522== Invalid write of size 4
==1522==    at 0x401EC8: add_card_to (in /graderhome/work/c4prj1_deck/tester)
==1522==    by 0x4021A2: build_remaining_deck (in /graderhome/work/c4prj1_deck/tester)
==1522==    by 0x40363C: check_build_remaining_deck (in /graderhome/work/c4prj1_deck/tester)
==1522==    by 0x400A78: main (in /graderhome/work/c4prj1_deck/tester)
==1522==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==1522== 
==1522== 
==1522== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==1522==  Access not within mapped region at address 0x0
==1522==    at 0x401EC8: add_card_to (in /graderhome/work/c4prj1_deck/tester)
==1522==    by 0x4021A2: build_remaining_deck (in /graderhome/work/c4prj1_deck/tester)
==1522==    by 0x40363C: check_build_remaining_deck (in /graderhome/work/c4prj1_deck/tester)
==1522==    by 0x400A78: main (in /graderhome/work/c4prj1_deck/tester)
==1522==  If you believe this happened as a result of a stack
==1522==  overflow in your program's main thread (unlikely but
==1522==  possible), you can try to increase the size of the
==1522==  main thread stack using the --main-stacksize= flag.
==1522==  The main thread stack size used in this run was 8388608.
==1522== 
==1522== HEAP SUMMARY:
==1522==     in use at exit: 104 bytes in 10 blocks
==1522==   total heap usage: 12 allocs, 2 frees, 4,208 bytes allocated
==1522== 
==1522== LEAK SUMMARY:
==1522==    definitely lost: 0 bytes in 0 blocks
==1522==    indirectly lost: 0 bytes in 0 blocks
==1522==      possibly lost: 0 bytes in 0 blocks
==1522==    still reachable: 104 bytes in 10 blocks
==1522==         suppressed: 0 bytes in 0 blocks
==1522== Rerun with --leak-check=full to see details of leaked memory
==1522== 
==1522== For counts of detected and suppressed errors, rerun with: -v
==1522== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
Testing get_match_count(deck_t *)
timeout: the monitored command dumped core
Valgrind reported errors:
==1526== Memcheck, a memory error detector
==1526== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==1526== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==1526== Command: ./tester gmc
==1526== Parent PID: 1525
==1526== 
==1526== Invalid read of size 8
==1526==    at 0x4015AC: get_match_counts (in /graderhome/work/c4prj1_deck/tester)
==1526==    by 0x403249: check_get_match_count (in /graderhome/work/c4prj1_deck/tester)
==1526==    by 0x400A78: main (in /graderhome/work/c4prj1_deck/tester)
==1526==  Address 0x52040e8 is 0 bytes after a block of size 8 alloc'd
==1526==    at 0x4C2DB8F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==1526==    by 0x4C2FDEF: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==1526==    by 0x4030F6: check_get_match_count (in /graderhome/work/c4prj1_deck/tester)
==1526==    by 0x400A78: main (in /graderhome/work/c4prj1_deck/tester)
==1526== 
==1526== Invalid read of size 4
==1526==    at 0x4015AF: get_match_counts (in /graderhome/work/c4prj1_deck/tester)
==1526==    by 0x403249: check_get_match_count (in /graderhome/work/c4prj1_deck/tester)
==1526==    by 0x400A78: main (in /graderhome/work/c4prj1_deck/tester)
==1526==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==1526== 
==1526== 
==1526== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==1526==  Access not within mapped region at address 0x0
==1526==    at 0x4015AF: get_match_counts (in /graderhome/work/c4prj1_deck/tester)
==1526==    by 0x403249: check_get_match_count (in /graderhome/work/c4prj1_deck/tester)
==1526==    by 0x400A78: main (in /graderhome/work/c4prj1_deck/tester)
==1526==  If you believe this happened as a result of a stack
==1526==  overflow in your program's main thread (unlikely but
==1526==  possible), you can try to increase the size of the
==1526==  main thread stack using the --main-stacksize= flag.
==1526==  The main thread stack size used in this run was 8388608.
==1526== 
==1526== HEAP SUMMARY:
==1526==     in use at exit: 72 bytes in 8 blocks
==1526==   total heap usage: 8 allocs, 0 frees, 72 bytes allocated
==1526== 
==1526== LEAK SUMMARY:
==1526==    definitely lost: 4 bytes in 1 blocks
==1526==    indirectly lost: 0 bytes in 0 blocks
==1526==      possibly lost: 0 bytes in 0 blocks
==1526==    still reachable: 68 bytes in 7 blocks
==1526==         suppressed: 0 bytes in 0 blocks
==1526== Rerun with --leak-check=full to see details of leaked memory
==1526== 
==1526== For counts of detected and suppressed errors, rerun with: -v
==1526== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)

Overall Grade: F
