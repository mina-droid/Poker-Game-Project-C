Grading at Tue Sep 29 23:01:45 UTC 2020
Compiling deck.c -> deck.o
Compiling eval.c -> eval.o
Compiling cards.c -> cards.o
Linking eval.o, deck.o, cards.o, and our tester
Testing free_deck(deck_t *)
- Test passed
Testing add_card_to(deck_t *, card_t)
timeout: the monitored command dumped core
Valgrind reported errors:
==1649== Memcheck, a memory error detector
==1649== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==1649== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==1649== Command: ./tester act
==1649== Parent PID: 1648
==1649== 
==1649== Use of uninitialised value of size 8
==1649==    at 0x401ECC: add_card_to (in /graderhome/work/c4prj1_deck/tester)
==1649==    by 0x4042F2: check_add_card_to (in /graderhome/work/c4prj1_deck/tester)
==1649==    by 0x400A78: main (in /graderhome/work/c4prj1_deck/tester)
==1649== 
==1649== Invalid write of size 4
==1649==    at 0x401ECC: add_card_to (in /graderhome/work/c4prj1_deck/tester)
==1649==    by 0x4042F2: check_add_card_to (in /graderhome/work/c4prj1_deck/tester)
==1649==    by 0x400A78: main (in /graderhome/work/c4prj1_deck/tester)
==1649==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==1649== 
==1649== 
==1649== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==1649==  Access not within mapped region at address 0x0
==1649==    at 0x401ECC: add_card_to (in /graderhome/work/c4prj1_deck/tester)
==1649==    by 0x4042F2: check_add_card_to (in /graderhome/work/c4prj1_deck/tester)
==1649==    by 0x400A78: main (in /graderhome/work/c4prj1_deck/tester)
==1649==  If you believe this happened as a result of a stack
==1649==  overflow in your program's main thread (unlikely but
==1649==  possible), you can try to increase the size of the
==1649==  main thread stack using the --main-stacksize= flag.
==1649==  The main thread stack size used in this run was 8388608.
==1649== 
==1649== HEAP SUMMARY:
==1649==     in use at exit: 904 bytes in 58 blocks
==1649==   total heap usage: 58 allocs, 0 frees, 904 bytes allocated
==1649== 
==1649== LEAK SUMMARY:
==1649==    definitely lost: 0 bytes in 0 blocks
==1649==    indirectly lost: 0 bytes in 0 blocks
==1649==      possibly lost: 0 bytes in 0 blocks
==1649==    still reachable: 904 bytes in 58 blocks
==1649==         suppressed: 0 bytes in 0 blocks
==1649== Rerun with --leak-check=full to see details of leaked memory
==1649== 
==1649== For counts of detected and suppressed errors, rerun with: -v
==1649== Use --track-origins=yes to see where uninitialised values come from
==1649== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
Testing add_empty_card(deck_t *)
timeout: the monitored command dumped core
Valgrind reported errors:
==1653== Memcheck, a memory error detector
==1653== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==1653== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==1653== Command: ./tester aec
==1653== Parent PID: 1652
==1653== 
==1653== Invalid read of size 8
==1653==    at 0x401F30: add_empty_card (in /graderhome/work/c4prj1_deck/tester)
==1653==    by 0x403D1E: check_add_empty_card (in /graderhome/work/c4prj1_deck/tester)
==1653==    by 0x400A78: main (in /graderhome/work/c4prj1_deck/tester)
==1653==  Address 0x520b668 is 0 bytes after a block of size 24 alloc'd
==1653==    at 0x4C2FD5F: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==1653==    by 0x403EBC: check_add_empty_card (in /graderhome/work/c4prj1_deck/tester)
==1653==    by 0x400A78: main (in /graderhome/work/c4prj1_deck/tester)
==1653== 
==1653== Invalid write of size 4
==1653==    at 0x401F36: add_empty_card (in /graderhome/work/c4prj1_deck/tester)
==1653==    by 0x403D1E: check_add_empty_card (in /graderhome/work/c4prj1_deck/tester)
==1653==    by 0x400A78: main (in /graderhome/work/c4prj1_deck/tester)
==1653==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==1653== 
==1653== 
==1653== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==1653==  Access not within mapped region at address 0x0
==1653==    at 0x401F36: add_empty_card (in /graderhome/work/c4prj1_deck/tester)
==1653==    by 0x403D1E: check_add_empty_card (in /graderhome/work/c4prj1_deck/tester)
==1653==    by 0x400A78: main (in /graderhome/work/c4prj1_deck/tester)
==1653==  If you believe this happened as a result of a stack
==1653==  overflow in your program's main thread (unlikely but
==1653==  possible), you can try to increase the size of the
==1653==  main thread stack using the --main-stacksize= flag.
==1653==  The main thread stack size used in this run was 8388608.
==1653== 
==1653== HEAP SUMMARY:
==1653==     in use at exit: 6,928 bytes in 447 blocks
==1653==   total heap usage: 454 allocs, 7 frees, 7,016 bytes allocated
==1653== 
==1653== LEAK SUMMARY:
==1653==    definitely lost: 0 bytes in 0 blocks
==1653==    indirectly lost: 0 bytes in 0 blocks
==1653==      possibly lost: 0 bytes in 0 blocks
==1653==    still reachable: 6,928 bytes in 447 blocks
==1653==         suppressed: 0 bytes in 0 blocks
==1653== Rerun with --leak-check=full to see details of leaked memory
==1653== 
==1653== For counts of detected and suppressed errors, rerun with: -v
==1653== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
Testing make_deck_exclude(deck_t *)
timeout: the monitored command dumped core
Valgrind reported errors:
==1657== Memcheck, a memory error detector
==1657== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==1657== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==1657== Command: ./tester mde
==1657== Parent PID: 1656
==1657== 
==1657== Use of uninitialised value of size 8
==1657==    at 0x401FE6: make_deck_exclude (in /graderhome/work/c4prj1_deck/tester)
==1657==    by 0x4039DC: check_make_deck_exclude (in /graderhome/work/c4prj1_deck/tester)
==1657==    by 0x400A78: main (in /graderhome/work/c4prj1_deck/tester)
==1657== 
==1657== Invalid write of size 8
==1657==    at 0x401FE6: make_deck_exclude (in /graderhome/work/c4prj1_deck/tester)
==1657==    by 0x4039DC: check_make_deck_exclude (in /graderhome/work/c4prj1_deck/tester)
==1657==    by 0x400A78: main (in /graderhome/work/c4prj1_deck/tester)
==1657==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==1657== 
==1657== 
==1657== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==1657==  Access not within mapped region at address 0x0
==1657==    at 0x401FE6: make_deck_exclude (in /graderhome/work/c4prj1_deck/tester)
==1657==    by 0x4039DC: check_make_deck_exclude (in /graderhome/work/c4prj1_deck/tester)
==1657==    by 0x400A78: main (in /graderhome/work/c4prj1_deck/tester)
==1657==  If you believe this happened as a result of a stack
==1657==  overflow in your program's main thread (unlikely but
==1657==  possible), you can try to increase the size of the
==1657==  main thread stack using the --main-stacksize= flag.
==1657==  The main thread stack size used in this run was 8388608.
==1657== 
==1657== HEAP SUMMARY:
==1657==     in use at exit: 1,296 bytes in 57 blocks
==1657==   total heap usage: 57 allocs, 0 frees, 1,296 bytes allocated
==1657== 
==1657== LEAK SUMMARY:
==1657==    definitely lost: 0 bytes in 0 blocks
==1657==    indirectly lost: 0 bytes in 0 blocks
==1657==      possibly lost: 0 bytes in 0 blocks
==1657==    still reachable: 1,296 bytes in 57 blocks
==1657==         suppressed: 0 bytes in 0 blocks
==1657== Rerun with --leak-check=full to see details of leaked memory
==1657== 
==1657== For counts of detected and suppressed errors, rerun with: -v
==1657== Use --track-origins=yes to see where uninitialised values come from
==1657== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
Testing build_remaining_deck(deck_t **, size_t)
Testing with 1 hand
timeout: the monitored command dumped core
Valgrind reported errors:
==1661== Memcheck, a memory error detector
==1661== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==1661== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==1661== Command: ./tester brd
==1661== Parent PID: 1660
==1661== 
==1661== Use of uninitialised value of size 8
==1661==    at 0x401ECC: add_card_to (in /graderhome/work/c4prj1_deck/tester)
==1661==    by 0x4021A3: build_remaining_deck (in /graderhome/work/c4prj1_deck/tester)
==1661==    by 0x40363C: check_build_remaining_deck (in /graderhome/work/c4prj1_deck/tester)
==1661==    by 0x400A78: main (in /graderhome/work/c4prj1_deck/tester)
==1661== 
==1661== Invalid write of size 4
==1661==    at 0x401ECC: add_card_to (in /graderhome/work/c4prj1_deck/tester)
==1661==    by 0x4021A3: build_remaining_deck (in /graderhome/work/c4prj1_deck/tester)
==1661==    by 0x40363C: check_build_remaining_deck (in /graderhome/work/c4prj1_deck/tester)
==1661==    by 0x400A78: main (in /graderhome/work/c4prj1_deck/tester)
==1661==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==1661== 
==1661== 
==1661== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==1661==  Access not within mapped region at address 0x0
==1661==    at 0x401ECC: add_card_to (in /graderhome/work/c4prj1_deck/tester)
==1661==    by 0x4021A3: build_remaining_deck (in /graderhome/work/c4prj1_deck/tester)
==1661==    by 0x40363C: check_build_remaining_deck (in /graderhome/work/c4prj1_deck/tester)
==1661==    by 0x400A78: main (in /graderhome/work/c4prj1_deck/tester)
==1661==  If you believe this happened as a result of a stack
==1661==  overflow in your program's main thread (unlikely but
==1661==  possible), you can try to increase the size of the
==1661==  main thread stack using the --main-stacksize= flag.
==1661==  The main thread stack size used in this run was 8388608.
==1661== 
==1661== HEAP SUMMARY:
==1661==     in use at exit: 104 bytes in 10 blocks
==1661==   total heap usage: 12 allocs, 2 frees, 4,208 bytes allocated
==1661== 
==1661== LEAK SUMMARY:
==1661==    definitely lost: 0 bytes in 0 blocks
==1661==    indirectly lost: 0 bytes in 0 blocks
==1661==      possibly lost: 0 bytes in 0 blocks
==1661==    still reachable: 104 bytes in 10 blocks
==1661==         suppressed: 0 bytes in 0 blocks
==1661== Rerun with --leak-check=full to see details of leaked memory
==1661== 
==1661== For counts of detected and suppressed errors, rerun with: -v
==1661== Use --track-origins=yes to see where uninitialised values come from
==1661== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
Testing get_match_count(deck_t *)
timeout: the monitored command dumped core
Valgrind reported errors:
==1665== Memcheck, a memory error detector
==1665== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==1665== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==1665== Command: ./tester gmc
==1665== Parent PID: 1664
==1665== 
==1665== Invalid read of size 8
==1665==    at 0x4015AC: get_match_counts (in /graderhome/work/c4prj1_deck/tester)
==1665==    by 0x403249: check_get_match_count (in /graderhome/work/c4prj1_deck/tester)
==1665==    by 0x400A78: main (in /graderhome/work/c4prj1_deck/tester)
==1665==  Address 0x52040e8 is 0 bytes after a block of size 8 alloc'd
==1665==    at 0x4C2DB8F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==1665==    by 0x4C2FDEF: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==1665==    by 0x4030F6: check_get_match_count (in /graderhome/work/c4prj1_deck/tester)
==1665==    by 0x400A78: main (in /graderhome/work/c4prj1_deck/tester)
==1665== 
==1665== Invalid read of size 4
==1665==    at 0x4015AF: get_match_counts (in /graderhome/work/c4prj1_deck/tester)
==1665==    by 0x403249: check_get_match_count (in /graderhome/work/c4prj1_deck/tester)
==1665==    by 0x400A78: main (in /graderhome/work/c4prj1_deck/tester)
==1665==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==1665== 
==1665== 
==1665== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==1665==  Access not within mapped region at address 0x0
==1665==    at 0x4015AF: get_match_counts (in /graderhome/work/c4prj1_deck/tester)
==1665==    by 0x403249: check_get_match_count (in /graderhome/work/c4prj1_deck/tester)
==1665==    by 0x400A78: main (in /graderhome/work/c4prj1_deck/tester)
==1665==  If you believe this happened as a result of a stack
==1665==  overflow in your program's main thread (unlikely but
==1665==  possible), you can try to increase the size of the
==1665==  main thread stack using the --main-stacksize= flag.
==1665==  The main thread stack size used in this run was 8388608.
==1665== 
==1665== HEAP SUMMARY:
==1665==     in use at exit: 72 bytes in 8 blocks
==1665==   total heap usage: 8 allocs, 0 frees, 72 bytes allocated
==1665== 
==1665== LEAK SUMMARY:
==1665==    definitely lost: 4 bytes in 1 blocks
==1665==    indirectly lost: 0 bytes in 0 blocks
==1665==      possibly lost: 0 bytes in 0 blocks
==1665==    still reachable: 68 bytes in 7 blocks
==1665==         suppressed: 0 bytes in 0 blocks
==1665== Rerun with --leak-check=full to see details of leaked memory
==1665== 
==1665== For counts of detected and suppressed errors, rerun with: -v
==1665== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)

Overall Grade: F
